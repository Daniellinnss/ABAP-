*&---------------------------------------------------------------------*
*& Report ZDL_IT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZDL_IT.

PARAMETERS: p_car TYPE sflight-carrid,
            p_con TYPE sflight-connid,
            p_t_from TYPE sflight-fldate,
            p_t_to TYPE sflight-fldate.

"Declaração de estrutura
TYPES: BEGIN OF ty_sflight,
        carrid   TYPE sflight-carrid,
        connid   TYPE sflight-connid,
        fldate   TYPE sflight-fldate,
        price    TYPE sflight-price,
        currency TYPE sflight-currency,
        seatsocc TYPE sflight-seatsocc,
       END OF ty_sflight.

"Work area
DATA: wa_sflight TYPE ty_sflight.
"Tabela interna
DATA: it_sflight TYPE TABLE OF ty_sflight.

"Variáveis para armazenar total e contagem
DATA: total_price TYPE sflight-price VALUE 0,
      flight_count TYPE i VALUE 0.

"Selecionar e armazenar os registros
SELECT carrid connid fldate price currency seatsocc
  INTO TABLE it_sflight
  FROM sflight
  WHERE carrid EQ p_car
  AND connid EQ p_con
  AND fldate BETWEEN p_t_from AND p_t_to
  ORDER BY fldate.

"Loop na tabela interna para transferir os registros da work area
LOOP AT it_sflight INTO wa_sflight.

  WRITE: / wa_sflight-carrid,
           wa_sflight-connid,
           wa_sflight-fldate,
           wa_sflight-price,
           wa_sflight-currency,
           wa_sflight-seatsocc.

  "Somar o preço total
  total_price = total_price + wa_sflight-price.

  "Incrementar contagem de voos
  flight_count = flight_count + 1.

ENDLOOP.

"Exibir total e contagem
WRITE: / 'Total de Preços:', total_price,
       / 'Número de Voos:', flight_count.
